Registration Result: 
{
  "ok": true,
  "txHash": "0xd19897eab1769b88ae472d9a04b70256d7ede706e319a18c04c5cb8f686a02df",
  "profileHash": "0x6f3d521207608ca619eac25d1ce67022dd77ef6d27693622b6775a0e365400a1"
}

issue credentials: 
-------------------------------
0x14dC79964da2C08b23698B3D3cc7Ca32193d9955
https://ipfs.io/ipfs/bafybeidezyacra5wulsxx2xkmkmgzwrl25kbnt6zv3seru4axtl2l5nigq
{
"type": "KYC",
"level": "basic",
"subject": "<recipient address>",
"issuer": "<backend signer or issuer address>",
"issuedAt": 1724937600
}

0xb0A21939a70147A3DA4e872Dad2f199bDce0A456
https://ipfs.io/ipfs/bafybeidezyacra5wulsxx2xkmkmgzwrl25kbnt6zv3seru4axtl2l5nigq
{
  "type": "KYC",
  "level": "basic",
  "subject": "0xb0A21939a70147A3DA4e872Dad2f199bDce0A456",
  "issuer": "0x2E63e8dBd9BC763a4b23537a8A77243c65BDc422",
  "issuedAt": 1724937600
}

Request Access
------------------

wallet: 0xb0A21939a70147A3DA4e872Dad2f199bDce0A456
purpose: 
{
"reason": "KYC verification",
"scope": ["name", "dob"],
"expiresAt": 1750000000
}


Approve Access
--------------------


















Dashboard: 
рж╕ржВржХрзНрж╖рзЗржкрзЗ ржХрзА ржХрж╛ржЬрзЗ рж▓рж╛ржЧржмрзЗ (ржПржЗ рж░рзЗржХрж░рзНржбржЯрж╛ржЗ ржкрзНрж░ржорж╛ржг)
ржЕрж░рзНрже ржоржирзНрждрзНрж░ржгрж╛рж▓рзЯ/ржмрзНржпрж╛ржирзНржХ (eKYC, ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржЦрзЛрж▓рж╛)
requester: ржмрзНржпрж╛ржВржХ/ржлрж┐ржиржЯрзЗржХ
subject: ржирж╛ржЧрж░рж┐ржХ
purposeHash: тАЬKYC verification + fields[name, nid] + retention 90 daysтАЭ
approved: citizen рж╕ржорзНржорждрж┐ ржЖржЫрзЗтАФржЖржЗржиржЧрждржнрж╛ржмрзЗ KYC ржбрж╛ржЯрж╛ ржЯрж╛ржирж╛рж░ ржЕржирзБржорждрж┐ ржУ ржЕржбрж┐ржЯ ржЯрзНрж░рзЗржЗрж▓
ржЯрзЗрж▓рж┐ржХржо (SIM рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи/рж░рж┐рзЯрзНржпрж╛рж▓-ржирзЗржо)
purposeHash ржП тАЬSIM registration + nid matchтАЭ; approved=true рж╣рж▓рзЗ ржЕржкрж╛рж░рзЗржЯрж░ NID/ржлржЯрзЛ-ржорзНржпрж╛ржЪ ржХрж░рждрзЗ ржкрж╛рж░рзЗ
рж╕рзНржмрж╛рж╕рзНржерзНржп ржоржирзНрждрзНрж░ржгрж╛рж▓рзЯ/рж╣рж╛рж╕ржкрж╛рждрж╛рж▓ (Medical data sharing)
requester: рж╣рж╛рж╕ржкрж╛рждрж╛рж▓/ржЗржирж╕рзНржпрзБрж░рж╛рж░
purposeHash: тАЬlab results [CBC, HbA1c], 1-time shareтАЭ
approved=true рж╣рж▓рзЗ рж╕рзБрж░ржХрзНрж╖рж┐ржд ржПржирзНржбржкрзЯрзЗржирзНржЯрзЗ ржбрж╛ржЯрж╛ рж╢рзЗрзЯрж╛рж░; audit-proof ржерж╛ржХ
рж╢рж┐ржХрзНрж╖рж╛ ржмрзЛрж░рзНржб/ржирж┐рзЯрзЛржЧржХрж░рзНрждрж╛ (Certificate/Background Check)
requester: ржирж┐рзЯрзЛржЧржХрж░рзНрждрж╛
purposeHash: тАЬverify degree: Univ X, year, idтАЭ; approved=true тЖТ VC/chain event ржжрж┐рзЯрзЗ ржбрж┐ржЧрзНрж░рж┐ ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржи
рж╕рж╛ржкрзНрж▓рж╛ржЗ-ржЪрзЗржЗржи/рж▓рж╛ржЗрж╕рзЗржирзНрж╕рж┐ржВ/ржЯрзНржпрж╛ржХрзНрж╕ (Permit/Compliance)
requester: рж░рзЗржЧрзБрж▓рзЗржЯрж░/ржХрж╛рж╕рзНржЯржорж╕
purposeHash: тАЬlicense status + tax clearanceтАЭ; approved=true рж╣рж▓рзЗ рж╕рзАржорж┐ржд ржлрж┐рж▓рзНржб рж╢рзЗрзЯрж╛рж░
ржПржЗ ржбрзЗржЯрж╛ ржкрзЯрзЗржирзНржЯржЧрзБрж▓рзЛрж░ ржорж╛ржирзЗ
requester: ржХрзЗ ржбрж╛ржЯрж╛ ржЪрж╛ржЗржЫрзЗ (рж╕ржВрж╕рзНржерж╛/ржХрзЛржорзНржкрж╛ржирж┐)
subject: ржпрж╛ржБрж░ ржбрж╛ржЯрж╛тАФржирж╛ржЧрж░рж┐ржХ/ржХрж╛рж╕рзНржЯржорж╛рж░
purposeHash: JSON-ржкрж▓рж┐рж╕рж┐/рж╕рзНржХрзЛржк/рж░рж┐ржЯрзЗржирж╢ржи/ржПржХрзНрж╕ржкрж╛рзЯрж╛рж░рж┐-рж░ рж╣рзНржпрж╛рж╢ (ржпрзЗржоржи {"reason":"KYC","scope"ЁЯЩБ"name","nid"],"expiresAt":...})
timestamp: ржХржмрзЗ ржЕржирзБрж░рзЛржз
approved: true ржорж╛ржирзЗ ржмрзИржз рж╕ржорзНржорждрж┐тАФржЕржбрж┐ржЯрзЗржмрж▓ ржкрзНрж░рзБржл
ржХрзАржнрж╛ржмрзЗ рж░рзЛрж▓-ржЖржЙржЯ ржХрж░ржмрзЗржи (ржкрзНрж░рзНржпрж╛ржХрзНржЯрж┐ржХрзНржпрж╛рж▓)
purpose ржЯрзЗржоржкрзНрж▓рзЗржЯ рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржбрж╛ржЗржЬ: reason, scope, retentionDays, expiresAt
Issuer onboarding: рж╕рж░ржХрж╛рж░/ржмрзЛрж░рзНржб/ржмрзНржпрж╛ржВржХржХрзЗ issuer рж╣рж┐рж╕рзЗржмрзЗ ржЕрзНржпрж╛ржб ржХрж░рзБржи; рждрж╛ржжрзЗрж░ VC ржЗрж╕рзНржпрзБ/рж░рж┐ржнрзЛржХ ржХрж░рждрзЗ ржжрж┐ржи
Verifier ржЧрзЗржЯржУрзЯрзЗ: approved consent + role ржЪрзЗржХ ржХрж░рзЗ ржХрзЗржмрж▓ ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржлрж┐рж▓рзНржб рж░рж┐ржЯрж╛рж░рзНржи
Privacy: scope ржЕржирзБржпрж╛рзЯрзА partial disclosure; рж╕ржорзНржнржм рж╣рж▓рзЗ ZK ржкрж▓рж┐рж╕рж┐ (e.g., тАЬ18+ trueтАЭ) ржпрзЛржЧ ржХрж░рзБржи
Revocation: VC revoke ржХрж░рж▓рзЗ рж╕рж╛рж░рзНржнрж┐рж╕ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ ржЕржХрж╛рж░рзНржпржХрж░
Compliance: ржкрзНрж░рждрж┐ржЯрж┐ API рж░рзЗрж╕ржкржирзНрж╕рзЗ requestId рж▓ржЧ ржХрж░рзБржитАФaudit рж╕рж╣ржЬ рж╣ржм
ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржмрж╛рж╕рзНрждржм ржмрзНржпржмрж╣рж╛рж░ ржЙржжрж╛рж╣рж░ржг
ржмрзНржпрж╛ржВржХ eKYC/ржорж╛ржЗржХрзНрж░рзЛржлрж╛ржЗржирзНржпрж╛ржирзНрж╕ ржЕржиржмрзЛрж░рзНржбрж┐ржВ
NID/SIM рж░рж┐рзЯрзНржпрж╛рж▓-ржирзЗржо ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржи
рж╕рзНржмрж╛рж╕рзНржерзНржп ржмрзАржорж╛/рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ рж░рж┐ржкрзЛрж░рзНржЯ рж╢рзЗрзЯрж╛рж░ (patient-consent)
рж╢рж┐ржХрзНрж╖рж╛ рж╕ржиржж/ржирж┐рзЯрзЛржЧ ржпрж╛ржЪрж╛ржЗ
ржПржХрзНрж╕ржкрзЛрж░рзНржЯ-ржЗржоржкрзЛрж░рзНржЯ ржкрж╛рж░ржорж┐ржЯ/ржЯрзНржпрж╛ржХрзНрж╕-ржХрзНрж▓рж┐рзЯрж╛рж░рзЗржирзНрж╕ ржкрзНрж░рзБржл
Bottom line: approved=true рж╕рж╣ requestId рж╣рж▓рзЛ consent proof. ржПржЗ ржкрзНрж░рзБржл ржжрзЗржЦрж┐рзЯрзЗ ржпрзЗ ржХрзЛржирзЛ рж╕рж░ржХрж╛рж░рзА/ржХрж░рзНржкрзЛрж░рзЗржЯ рж╕рж╛рж░рзНржнрж┐рж╕ тАЬржХрзЗржи/ржХрждржЯрзБржХрзБтАЭ ржбрж╛ржЯрж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрзЗ рждрж╛ ржЖржЗржиржЧрждржнрж╛ржмрзЗ ржирзНржпрж╛ржпрзНржп ржУ ржЕржбрж┐ржЯрзЗржмрж▓ржнрж╛ржмрзЗ ржкрзНрж░ржорж╛ржг ржХрж░рж╛ ржпрж╛рзЯред



Recipient Address ржХрзЗ
Dashboard тЖТ Issue Credential ржлрж░рзНржорзЗрж░ Recipient Address рж╣рж▓рзЛ # ржХрзНрж░рзЗржбрзЗржирж╢рж┐рзЯрж╛рж▓ рж╣рзЛрж▓рзНржбрж╛рж░рзЗрж░ ржУрзЯрж╛рж▓рзЗржЯ ржЕрзНржпрж╛ржбрзНрж░рзЗрж╕ (EOA). 
ржПржЦрж╛ржирзЗржЗ ERC721 credential mint рж╣рзЯ. Contract receipt-ржП:
from: issuer (caller)
to: Credential contract address
holder: ржЖржкржирж┐ ржпрзЗ Recipient Address ржжрж┐рзЯрзЗржЫрзЗржи (mint recipient)
Metadata ржХрзЗржи рж▓рж╛ржЧрзЗ
tokenURI рж╣рж┐рж╕рзЗржмрзЗ ржЕржл-ржЪрзЗржЗржи JSON (IPFS) ржкрзЯрзЗржирзНржЯ ржХрж░рзЗ; ржПрждрзЗ ржХрзНрж░рзЗржбрзЗржирж╢рж┐рзЯрж╛рж▓рзЗрж░ ржмрж░рзНржгржирж╛/ржлрж┐рж▓рзНржб ржерж╛ржХрзЗред
ржЖржорж░рж╛ URI ржерзЗржХрзЗ keccak256 ржХрж░рзЗ bytes32 credentialHash рждрзИрж░рж┐ ржХрж░рзЗ ржЕржи-ржЪрзЗржЗржирзЗ ржкрж╛ржарж╛ржЗ; рждрж╛ржЗ ржЕржи-ржЪрзЗржЗржи рж╣рж╛рж▓ржХрж╛/ржЗржорж┐ржЙржЯрзЗржмрж▓ рж░рзЗржлрж╛рж░рзЗржирзНрж╕, ржЕржл-ржЪрзЗржЗржирзЗ рж░рж┐ржЪ ржбрзЗржЯрж╛ ржерж╛ржХрзЗред
Request Access-ржП ржХрж╛рж░ address ржпрж╛ржЪрзНржЫрзЗ
ржЖржкржирж╛рж░ ржПржЗ ржЗржорзНржкрзНрж▓рж┐ржорзЗржирзНржЯрзЗрж╢ржирзЗ Request Access backend API ржжрж┐рзЯрзЗ рж╣рзЯ; ржЕржи-ржЪрзЗржЗржирзЗ requester рж╣рзЯ backend signer (server wallet). 
Subject Address ржЖржкржирж┐ ржлрж░рзНржорзЗ ржжрзЗржитАФржУржЗ subject-ржЗ ржкрж░рзЗ approve ржХрж░ржмрзЗред
UI-рждрзЗ connected wallet address ржжрзЗржЦрж╛ржирзЛ рж╣рзЯ, ржХрж┐ржирзНрждрзБ on-chain requester = server signer (ржмрж░рзНрждржорж╛ржи рж╕рзЗржЯржЖржкрзЗ) рж╢рзЗрж╖ ржкрж░рзНржпржирзНржд ржХрзА рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ
Issue Credential: { success: true, transaction: receipt, tokenId } (receipt UI-рждрзЗ ржжрзЗржЦрж╛ржЪрзНржЫрзЗ; DB-рждрзЗржУ save ржХрж░рж┐)
Request Access: { success: true, requestId } (bytes32; UI-рждрзЗ ржжрзЗржЦрж╛ржЪрзНржЫрзЗ)
Approve Access: { success: true, transaction: receipt } (ржЖржорж░рж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржерзЗржХрзЗржЗ contract approve ржХрж░ржЫрж┐)
Verify (mock): { success: true, isValid } (non-empty proof рж╣рж▓рзЗ true)
ржЪрж╛ржЗрж▓рзЗ Request Access-ржУ ржлрзНрж░ржирзНржЯржПржирзНржб ржерзЗржХрзЗ рж╕рж░рж╛рж╕рж░рж┐ contract-ржП ржкрж╛ржарж╛рждрзЗ ржкрж╛рж░рж┐, рждржЦржи requester рж╣ржмрзЗ ржЖржкржирж╛рж░ connected walletред